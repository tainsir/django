

1 web 应用
2 c/s 和bs架构
3 python中的web框架
    a :socket
    b:路由跟视图函数匹配关系
    c:模板渲染

    django: a: 用了别人的wsgiref   b:自己写的   c:自己写的
    flask: a:用了别人的            b:自己写的   c:用了别人的:jinja2
    tornado: a 自己写的，socket支持高并发           b:自己写的   c:自己写的

4 http协议:(重点)
    -特点:1 基于TCP/IP协议之上的应用层协议
          2 基于请求－响应模式
          3 无状态保存
          4 无连接
    -请求格式:
    -响应格式: 1开头Informational，接收的请求正在处理 ， 2，Success--请求正常处理完毕 3，Redirection--需要进行附加操作以完成请求
    4，ClientError--服务器无法处理请求  ,5,ServerError--服务器处理请求出错
5 django的安装和简单使用
    -安装:1 pip3 install django==1.11.9
          2 pycharm 下安装,选择版本号
    -使用:
         命令创建项目:django-admin startproject 项目名字
         创建app:python3 manage.py startapp app01
    -文件目录介绍:
        -manage.py---项目入口,执行一些命令
        -项目名
            -settings:全局配置信息
            -urls:总路由,请求地址跟视图函数的映射关系
        -app名字
            -migrations:数据库迁移的记录
            -models.py  数据库表模型
            -views  视图函数

    -运行项目:
        pytyon3 manage.py runserver 127.0.0.1:8001
        


6 补充:
    1 decode和encode
        data = b'111111'
        data = str(data, encoding='utf-8')
        print(type(data))
        data = bytes(data, encoding='utf-8')
        print(type(data))
    2 pymysql链接数据库
        #拿到数据库链接
        user为mysql用户名，db为库名，pwd为密码（我电脑mysql账号密码为123）
        conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', db='lqz', password='admin')
        #获得游标,并且查询结果数据是字典格式
        cur=conn.cursor(pymysql.cursors.DictCursor)
        #执行sql
        cur.execute('select * from user')
        #获取全部查询结果
        dic=cur.fetchall()
    3 以后写项目:
        1 不要用中文
        2 计算机名不能用中文
        3 一个工程,就是一个项目

7 作业:
    1 上课讲的内容整理到博客上
    2 django下载下来,跑起来
    3 单表的图书管理系统
      图书的增删改查
        一个book表
          id  name   price  author  publish

      所有人都必须完成:查
