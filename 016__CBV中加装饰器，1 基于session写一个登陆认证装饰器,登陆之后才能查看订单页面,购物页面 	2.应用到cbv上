# =====================================================================================
1).创建User数据库,在model.py中

from django.db import models

# Create your models here.
class User(models.Model):
    name = models.CharField(max_length=32)
    pwd = models.CharField(max_length=32)


# =====================================================================================
2).路由层url.py中


from django.conf.urls import url
from django.contrib import admin
from app01 import views
urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^login/', views.Login.as_view()),
    url(r'^order/', views.Order.as_view()),
]

# =====================================================================================
3).视图函数view.py中


from django.shortcuts import render, HttpResponse,redirect

# Create your views here.
from django.views import View
from app01 import models

# 不通用
# def login_auth(func):
#     def inner(self,request, *args, **kwargs):
#         url=request.get_full_path()
#         if request.session.get('id'):
#             ret = func(self,request, *args, **kwargs)
#         else:
#             return redirect('/login/?next=%s'%url)
#         return ret
#
#     return inner

def login_auth(func):
    def inner(request, *args, **kwargs):
        url=request.get_full_path()
        if request.session.get('id'):
            ret = func(request, *args, **kwargs)
        else:
            return redirect('/login/?next=%s'%url)
        return ret

    return inner
      

class Login(View):
    def get(self, request, *args, **kwargs):
        return render(request, 'login.html')

    def post(self, request, *args, **kwargs):
        name = request.POST.get('name')
        pwd = request.POST.get('pwd')
        ret = models.User.objects.filter(name=name, pwd=pwd).first()
        if ret:
            url=request.GET.get('next')
            request.session['id'] = ret.pk
            request.session['name'] = ret.name
            return redirect(url)
        else:
            return HttpResponse('用户名密码错误')

from django.utils.decorators import method_decorator

@method_decorator(login_auth,name='post')
@method_decorator(login_auth,name='get')
class Order(View):

    # @login_auth
    # @method_decorator(login_auth)
    def get(self, reuqest):
        # 取数据库查询订单,返回
        userid=reuqest.session.get('id')
        # 通过userid取查订单表,查出所有订单信息
        return HttpResponse('我是订单页面,我查出了好多')

    # @method_decorator(login_auth)
    def post(self,request):
        return HttpResponse('post')


# =====================================================================================
4).在模板层login.html中


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
<form action="" method="post">
    <input type="text" name="name">
    <input type="text" name="pwd">
    <input type="submit" value="提交">

</form>
</body>
</html>
